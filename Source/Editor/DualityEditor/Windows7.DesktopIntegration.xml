<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Windows7.DesktopIntegration</name>
    </assembly>
    <members>
        <member name="T:Windows7.DesktopIntegration.RegistrationHelper">
            <summary>
            Helper class for registering file associations.
            </summary>
        </member>
        <member name="M:Windows7.DesktopIntegration.RegistrationHelper.RegisterFileAssociations(System.String,System.Boolean,System.String,System.String,System.String[])">
            <summary>
            Registers file associations for an application.
            </summary>
            <param name="progId">The application's ProgID.</param>
            <param name="registerInHKCU">Whether to register the
            association per-user (in HKCU).  The only supported value
            at this time is <b>false</b>.</param>
            <param name="appId">The application's app-id.</param>
            <param name="openWith">The command and arguments to be used
            when opening a shortcut to a document.</param>
            <param name="extensions">The extensions to register.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.RegistrationHelper.UnregisterFileAssociations(System.String,System.Boolean,System.String,System.String,System.String[])">
            <summary>
            Unregisters file associations for an application.
            </summary>
            <param name="progId">The application's ProgID.</param>
            <param name="registerInHKCU">Whether to register the
            association per-user (in HKCU).  The only supported value
            at this time is <b>false</b>.</param>
            <param name="appId">The application's app-id.</param>
            <param name="openWith">The command and arguments to be used
            when opening a shortcut to a document.</param>
            <param name="extensions">The extensions to unregister.</param>
        </member>
        <member name="T:Windows7.DesktopIntegration.ShellLibrary">
            <summary>
            This type wraps a shell library object and serves as a focal point to manage a specific library instance 
            </summary>
        </member>
        <member name="M:Windows7.DesktopIntegration.ShellLibrary.Create(System.String,System.String)">
            <summary>
            Create a Shell Library and return a <see cref="T:Windows7.DesktopIntegration.ShellLibrary"/> object
            </summary>
            <param name="name">The library name</param>
            <param name="folderToSaveIn">The folder (library) to add the new library to</param>
            <returns>A <see cref="T:Windows7.DesktopIntegration.ShellLibrary"/> object</returns>
        </member>
        <member name="M:Windows7.DesktopIntegration.ShellLibrary.Create(System.String,System.Boolean)">
            <summary>
            Create a Shell Library and return a <see cref="T:Windows7.DesktopIntegration.ShellLibrary"/> object
            </summary>
            <param name="name">The library name</param>
            <param name="isPinnedToNavigationPane">Whether the library is pinned to the Explorer window navigatin Pane </param>
            <returns>A <see cref="T:Windows7.DesktopIntegration.ShellLibrary"/> object</returns>
        </member>
        <member name="M:Windows7.DesktopIntegration.ShellLibrary.Create(System.String)">
            <summary>
            Create a Shell Library and return a <see cref="T:Windows7.DesktopIntegration.ShellLibrary"/> object
            </summary>
            <param name="name">The library name</param>
            <returns>A <see cref="T:Windows7.DesktopIntegration.ShellLibrary"/> object</returns>
        </member>
        <member name="M:Windows7.DesktopIntegration.ShellLibrary.Load(System.String,System.Boolean)">
            <summary>
            Load an existing library and create a <see cref="T:Windows7.DesktopIntegration.ShellLibrary"/> object that enables 
            the management of this library
            </summary>
            <param name="path">The library to load.</param>
            <param name="isWritable">Define the access code to the library</param>
            <returns>A <see cref="T:Windows7.DesktopIntegration.ShellLibrary"/> object</returns>
        </member>
        <member name="M:Windows7.DesktopIntegration.ShellLibrary.Load(Microsoft.SDK.Samples.VistaBridge.Library.KnownFolders.KnownFolder,System.Boolean)">
            <summary>
            Load an existing library and create a <see cref="T:Windows7.DesktopIntegration.ShellLibrary"/> object that enables 
            the management of this library from a known folder location
            </summary>
            <param name="knownFolderLibrary">The known folder library to load</param>
            <param name="isWritable">Define the access code to the library</param>
            <returns>A <see cref="T:Windows7.DesktopIntegration.ShellLibrary"/> object</returns>
        </member>
        <member name="M:Windows7.DesktopIntegration.ShellLibrary.AddFolder(System.String)">
            <summary>
            Add new folder to a library
            </summary>
            <param name="path">The folder to add</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.ShellLibrary.RemoveFolder(System.String)">
            <summary>
            Remove a folder from a library
            </summary>
            <param name="path">The folder to remove</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.ShellLibrary.GetFolders">
            <summary>
            Return all folders in a Library
            <remarks>This method requires a write access to the library to be able to reflect a folder move or delete change</remarks>
            </summary>
            <returns>A list of folders</returns>
        </member>
        <member name="M:Windows7.DesktopIntegration.ShellLibrary.CreateLibraryFullName(System.String)">
            <summary>
            Helper function to create a file name for a library under the default Libraries folder
            </summary>
            <param name="name">the short library name</param>
            <returns>The full library path</returns>
        </member>
        <member name="M:Windows7.DesktopIntegration.ShellLibrary.Delete">
            <summary>
            Delete the library
            <remarks>This method delete the shell library and Dispose the .NET ShellLibrary instance</remarks>
            </summary>
        </member>
        <member name="M:Windows7.DesktopIntegration.ShellLibrary.Delete(System.String)">
            <summary>
            Delete a library
            </summary>
            <param name="libraryPath">the .library-ms file to delete</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.ShellLibrary.ShowManageLibraryUI(System.String,System.IntPtr,System.String,System.String,System.Boolean)">
            <summary>
            Shows the library management dialog which enables users to mange the library folders and default save location.
            </summary>
            <param name="path">The path to the library</param>
            <param name="hwndOwner">The parent windows</param>
            <param name="title">A title for the library management dialog, or NULL to use the library name as the title</param>
            <param name="instruction">An optional help string to display for the library management dialog</param>
            <param name="allowAllLocations">If true, do not show warning dialogs about locations that cannot be indexed</param>
            <returns>true if the user cliked O.K, false if the user clicked Cancel</returns>
        </member>
        <member name="M:Windows7.DesktopIntegration.ShellLibrary.ShowManageLibraryUI(Microsoft.SDK.Samples.VistaBridge.Library.KnownFolders.KnownFolder,System.IntPtr,System.String,System.String,System.Boolean)">
            <summary>
            Shows the library management dialog which enables users to mange the library folders and default save location.
            </summary>
            <param name="knownFolder">A known folder based library</param>
            <param name="hwndOwner">The parent windows</param>
            <param name="title">A title for the library management dialog, or NULL to use the library name as the title</param>
            <param name="instruction">An optional help string to display for the library management dialog</param>
            <param name="allowAllLocations">If true, do not show warning dialogs about locations that cannot be indexed</param>
            <returns>true if the user cliked O.K, false if the user clicked Cancel</returns>
        </member>
        <member name="M:Windows7.DesktopIntegration.ShellLibrary.Dispose">
            <summary>
            Relese the IShellLibrary COM object
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.ShellLibrary.DefaultSaveFolder">
            <summary>
            Set and Get the default save folder
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.ShellLibrary.Name">
            <summary>
            Get or set (rename) the library short name
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.ShellLibrary.FullName">
            <summary>
            Get or set (rename) the library Full (path) name
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.ShellLibrary.Icon">
            <summary>
            Get and Set the library Icon. 
            The format is a string that contains the resource Dll and the resource index
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.ShellLibrary.IsPinnedToNavigationPane">
            <summary>
            Set or Get whether the library is pinned to the Explorer window navigatin Pane 
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.ShellLibrary.FolderTypeId">
            <summary>
            Get &amp; Set the folder type id
            </summary>
        </member>
        <member name="T:Windows7.DesktopIntegration.ThumbButtonManager">
            <summary>
            Manages a set of taskbar thumbnail buttons in an application.
            </summary>
        </member>
        <member name="M:Windows7.DesktopIntegration.ThumbButtonManager.#ctor(System.IntPtr)">
            <summary>
            Initializes a new manager with the specified window handle.
            </summary>
            <param name="hwnd">The window handle.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.ThumbButtonManager.CreateThumbButton(System.UInt32,System.Drawing.Icon,System.String)">
            <summary>
            Creates a new taskbar thumbnail button.
            </summary>
            <param name="id">The button's id.</param>
            <param name="icon">The button's icon.</param>
            <param name="tooltip">The button's tooltip.</param>
            <returns>An object of type <see cref="T:Windows7.DesktopIntegration.ThumbButton"/>
            representing the newly created thumbnail button.</returns>
        </member>
        <member name="M:Windows7.DesktopIntegration.ThumbButtonManager.DispatchMessage(System.Windows.Forms.Message@)">
            <summary>
            Dispatches a Windows message to the thumbnail button event
            handlers if appropriate.
            </summary>
            <remarks>
            This method is intended for infrastructure use only.
            </remarks>
            <param name="message">The message.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.ThumbButtonManager.AddThumbButtons(Windows7.DesktopIntegration.ThumbButton[])">
            <summary>
            Adds the specified taskbar thumbnail buttons to the application's
            thumbnail toolbar.
            </summary>
            <remarks>
            Thumbnail buttons can only be added once - after being added,
            they cannot be removed or deleted.  However, they can be shown,
            hidden, enabled and disabled.
            </remarks>
            <param name="buttons">The buttons to add.</param>
        </member>
        <member name="P:Windows7.DesktopIntegration.ThumbButtonManager.Item(System.UInt32)">
            <summary>
            Gets a specific thumbnail button by its id.
            </summary>
            <param name="id">The thumbnail button's id.</param>
            <returns>An object of type <see cref="T:Windows7.DesktopIntegration.ThumbButton"/>
            with the specified id.</returns>
        </member>
        <member name="T:Windows7.DesktopIntegration.JumpListDestinations">
            <summary>
            A collection of categorized jump list destinations.
            </summary>
        </member>
        <member name="T:Windows7.DesktopIntegration.JumpListTasks">
            <summary>
            A collection of jump list tasks.
            </summary>
        </member>
        <member name="T:Windows7.DesktopIntegration.IJumpListShellObject">
            <summary>
            Represents a shell object that can be inserted to an application's
            jump list.
            </summary>
        </member>
        <member name="M:Windows7.DesktopIntegration.IJumpListShellObject.GetShellRepresentation">
            <summary>
            Gets the shell representation of an object, such as
            <b>IShellLink</b> or <b>IShellItem</b>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Windows7.DesktopIntegration.IJumpListShellObject.Title">
            <summary>
            Gets or sets the object's title.
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.IJumpListShellObject.Path">
            <summary>
            Gets or sets the object's path.
            </summary>
        </member>
        <member name="T:Windows7.DesktopIntegration.IJumpListDestination">
            <summary>
            Represents a jump list destination.
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.IJumpListDestination.Category">
            <summary>
            Gets or sets the destination's category.
            </summary>
        </member>
        <member name="T:Windows7.DesktopIntegration.IJumpListTask">
            <summary>
            Represents a jump list task.
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.IJumpListTask.Arguments">
            <summary>
            Gets or sets the task's command line arguments.
            </summary>
        </member>
        <member name="T:Windows7.DesktopIntegration.WindowShowCommand">
            <summary>
            Flags controlling the appearance of a window.
            </summary>
        </member>
        <member name="F:Windows7.DesktopIntegration.WindowShowCommand.Hide">
            <summary>
            Hides the window and activates another window.
            </summary>
        </member>
        <member name="F:Windows7.DesktopIntegration.WindowShowCommand.Normal">
            <summary>
            Activates and displays the window (including restoring
            it to its original size and position).
            </summary>
        </member>
        <member name="F:Windows7.DesktopIntegration.WindowShowCommand.Minimized">
            <summary>
            Minimizes the window.
            </summary>
        </member>
        <member name="F:Windows7.DesktopIntegration.WindowShowCommand.Maximized">
            <summary>
            Maximizes the window.
            </summary>
        </member>
        <member name="F:Windows7.DesktopIntegration.WindowShowCommand.ShowNoActivate">
            <summary>
            Similar to <see cref="F:Windows7.DesktopIntegration.WindowShowCommand.Normal"/>, except that the window
            is not activated.
            </summary>
        </member>
        <member name="F:Windows7.DesktopIntegration.WindowShowCommand.Show">
            <summary>
            Activates the window and displays it in its current size
            and position.
            </summary>
        </member>
        <member name="F:Windows7.DesktopIntegration.WindowShowCommand.Minimize">
            <summary>
            Minimizes the window and activates the next top-level window.
            </summary>
        </member>
        <member name="F:Windows7.DesktopIntegration.WindowShowCommand.ShowMinimizedNoActivate">
            <summary>
            Minimizes the window and does not activate it.
            </summary>
        </member>
        <member name="F:Windows7.DesktopIntegration.WindowShowCommand.ShowNA">
            <summary>
            Similar to <see cref="F:Windows7.DesktopIntegration.WindowShowCommand.Normal"/>, except that the window is not
            activated.
            </summary>
        </member>
        <member name="F:Windows7.DesktopIntegration.WindowShowCommand.Restore">
            <summary>
            Activates and displays the window, restoring it to its original
            size and position.
            </summary>
        </member>
        <member name="F:Windows7.DesktopIntegration.WindowShowCommand.Default">
            <summary>
            Sets the show state based on the initial value specified when
            the process was created.
            </summary>
        </member>
        <member name="F:Windows7.DesktopIntegration.WindowShowCommand.ForceMinimize">
            <summary>
            Minimizes a window, even if the thread owning the window is not
            responding.  Use this only to minimize windows from a different
            thread.
            </summary>
        </member>
        <member name="T:Windows7.DesktopIntegration.Separator">
            <summary>
            Represents a separator in the task area of the jump list.
            There is no need to set any properties on this class.
            </summary>
        </member>
        <member name="T:Windows7.DesktopIntegration.ShellLink">
            <summary>
            Represents a shell link (<b>IShellLink</b>) object.
            </summary>
        </member>
        <member name="M:Windows7.DesktopIntegration.ShellLink.GetShellRepresentation">
            <summary>
            Gets the shell <b>IShellLink</b> representation
            of the object.
            </summary>
            <returns>An <b>IShellLink</b> up-cast to <b>object</b>.</returns>
        </member>
        <member name="P:Windows7.DesktopIntegration.ShellLink.Title">
            <summary>
            Gets or sets the object's title.
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.ShellLink.Category">
            <summary>
            Gets or sets the object's category.
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.ShellLink.Path">
            <summary>
            Gets or sets the object's path.
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.ShellLink.IconLocation">
            <summary>
            Gets or sets the location of the object's icon.
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.ShellLink.IconIndex">
            <summary>
            Gets or sets the index of the object's icon in the specified
            icon's location (<see cref="P:Windows7.DesktopIntegration.ShellLink.IconLocation"/>).
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.ShellLink.Arguments">
            <summary>
            Gets or sets the object's arguments (passed to the command
            line).
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.ShellLink.WorkingDirectory">
            <summary>
            Gets or sets the object's working directory.
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.ShellLink.ShowCommand">
            <summary>
            Gets or sets the show command of the launched application.
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.ShellLink.IsSeparator">
            <summary>
            Gets or sets a flag indicating that the shell link
            is a menu separator.  If this flag is set, all other
            properties are ignored.
            </summary>
        </member>
        <member name="T:Windows7.DesktopIntegration.ShellItem">
            <summary>
            Represents a <b>IShellItem</b> object.
            </summary>
        </member>
        <member name="M:Windows7.DesktopIntegration.ShellItem.GetShellRepresentation">
            <summary>
            Gets the shell <b>IShellItem</b> representation
            of the object.
            </summary>
            <returns>An <b>IShellItem</b> up-cast to <b>object</b>.</returns>
        </member>
        <member name="P:Windows7.DesktopIntegration.ShellItem.Category">
            <summary>
            Gets or sets the object's category.
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.ShellItem.Path">
            <summary>
            Gets or sets the object's path.
            </summary>
        </member>
        <member name="T:Windows7.DesktopIntegration.Windows7Taskbar">
            <summary>
            The primary coordinator of the Windows 7 taskbar-related activities.
            For additional functionality, see the <see cref="T:Windows7.DesktopIntegration.JumpListManager"/>
            and <see cref="T:Windows7.DesktopIntegration.ThumbButtonManager"/> classes.
            </summary>
        </member>
        <member name="M:Windows7.DesktopIntegration.Windows7Taskbar.GetWindowAppId(System.IntPtr)">
            <summary>
            Gets a window's application id by its window handle.
            </summary>
            <param name="hwnd">The window handle.</param>
            <returns>The application id of that window.</returns>
        </member>
        <member name="M:Windows7.DesktopIntegration.Windows7Taskbar.SetWindowAppId(System.IntPtr,System.String)">
            <summary>
            Sets the window's application id by its window handle.
            </summary>
            <param name="hwnd">The window handle.</param>
            <param name="appId">The application id.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.Windows7Taskbar.SetCurrentProcessAppId(System.String)">
            <summary>
            Sets the current process' explicit application user model id.
            </summary>
            <param name="appId">The application id.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.Windows7Taskbar.GetCurrentProcessAppId">
            <summary>
            Gets the current process' explicit application user model id.
            </summary>
            <returns>The application id.</returns>
        </member>
        <member name="M:Windows7.DesktopIntegration.Windows7Taskbar.EnableCustomWindowPreview(System.IntPtr)">
            <summary>
            Indicates that the specified window requests the DWM
            to demand live preview (thumbnail and peek) mode when necessary
            instead of relying on default preview.
            </summary>
            <param name="hwnd">The window handle.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.Windows7Taskbar.DisableCustomWindowPreview(System.IntPtr)">
            <summary>
            Indicates that the specified window does not require the DWM
            to demand live preview (thumbnail and peek) mode when necessary,
            i.e. this window relies on default preview.
            </summary>
            <param name="hwnd">The window handle.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.Windows7Taskbar.SetIconicThumbnail(System.IntPtr,System.Drawing.Bitmap)">
            <summary>
            Sets the specified iconic thumbnail for the specified window.
            This is typically done in response to a DWM message.
            </summary>
            <param name="hwnd">The window handle.</param>
            <param name="bitmap">The thumbnail bitmap.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.Windows7Taskbar.SetPeekBitmap(System.IntPtr,System.Drawing.Bitmap,System.Boolean)">
            <summary>
            Sets the specified peek (live preview) bitmap for the specified
            window.  This is typically done in response to a DWM message.
            </summary>
            <param name="hwnd">The window handle.</param>
            <param name="bitmap">The thumbnail bitmap.</param>
            <param name="displayFrame">Whether to display a standard window
            frame around the bitmap.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.Windows7Taskbar.SetPeekBitmap(System.IntPtr,System.Drawing.Bitmap,System.Drawing.Point,System.Boolean)">
            <summary>
            Sets the specified peek (live preview) bitmap for the specified
            window.  This is typically done in response to a DWM message.
            </summary>
            <param name="hwnd">The window handle.</param>
            <param name="bitmap">The thumbnail bitmap.</param>
            <param name="offset">The client area offset at which to display
            the specified bitmap.  The rest of the parent window will be
            displayed as "remembered" by the DWM.</param>
            <param name="displayFrame">Whether to display a standard window
            frame around the bitmap.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.Windows7Taskbar.SetTaskbarOverlayIcon(System.IntPtr,System.Drawing.Icon,System.String)">
            <summary>
            Draws the specified overlay icon on the specified window's
            taskbar button.
            </summary>
            <param name="hwnd">The window handle.</param>
            <param name="icon">The overlay icon.</param>
            <param name="description">The overlay icon description.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.Windows7Taskbar.SetProgressState(System.IntPtr,Windows7.DesktopIntegration.Windows7Taskbar.ThumbnailProgressState)">
            <summary>
            Sets the progress state of the specified window's
            taskbar button.
            </summary>
            <param name="hwnd">The window handle.</param>
            <param name="state">The progress state.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.Windows7Taskbar.SetProgressValue(System.IntPtr,System.UInt64,System.UInt64)">
            <summary>
            Sets the progress value of the specified window's
            taskbar button.
            </summary>
            <param name="hwnd">The window handle.</param>
            <param name="current">The current value.</param>
            <param name="maximum">The maximum value.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.Windows7Taskbar.SetThumbnailClip(System.IntPtr,System.Drawing.Rectangle)">
            <summary>
            Specifies that only a portion of the window's client area
            should be used in the window's thumbnail.
            </summary>
            <param name="hwnd">The window.</param>
            <param name="clipRect">The rectangle that specifies the clipped region.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.Windows7Taskbar.SetThumbnailTooltip(System.IntPtr,System.String)">
            <summary>
            Sets the specified window's thumbnail tooltip.
            </summary>
            <param name="hwnd">The window.</param>
            <param name="tooltip">The tooltip text.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.Windows7Taskbar.AllowTaskbarWindowMessagesThroughUIPI">
            <summary>
            Specifies that the taskbar- and DWM-related windows messages should
            pass through the Windows UIPI mechanism even if the process is
            running elevated.  Calling this method is not required unless the
            process is running elevated.
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.Windows7Taskbar.TaskbarButtonCreatedMessage">
            <summary>
            The WM_TaskbarButtonCreated message number.
            </summary>
        </member>
        <member name="T:Windows7.DesktopIntegration.Windows7Taskbar.ThumbnailProgressState">
            <summary>
            Represents the thumbnail progress bar state.
            </summary>
        </member>
        <member name="F:Windows7.DesktopIntegration.Windows7Taskbar.ThumbnailProgressState.NoProgress">
            <summary>
            No progress is displayed.
            </summary>
        </member>
        <member name="F:Windows7.DesktopIntegration.Windows7Taskbar.ThumbnailProgressState.Indeterminate">
            <summary>
            The progress is indeterminate (marquee).
            </summary>
        </member>
        <member name="F:Windows7.DesktopIntegration.Windows7Taskbar.ThumbnailProgressState.Normal">
            <summary>
            Normal progress is displayed.
            </summary>
        </member>
        <member name="F:Windows7.DesktopIntegration.Windows7Taskbar.ThumbnailProgressState.Error">
            <summary>
            An error occurred (red).
            </summary>
        </member>
        <member name="F:Windows7.DesktopIntegration.Windows7Taskbar.ThumbnailProgressState.Paused">
            <summary>
            The operation is paused (yellow).
            </summary>
        </member>
        <member name="T:Windows7.DesktopIntegration.WindowsForms.WindowsFormsExtensions">
            <summary>
            Contains extension methods for easier Windows Forms interoperability.
            </summary>
        </member>
        <member name="M:Windows7.DesktopIntegration.WindowsForms.WindowsFormsExtensions.SetAppId(System.Windows.Forms.Form,System.String)">
            <summary>
            Sets this form's application id.
            </summary>
            <param name="form">The form.</param>
            <param name="appId">The application id.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.WindowsForms.WindowsFormsExtensions.GetAppId(System.Windows.Forms.Form)">
            <summary>
            Gets this form's application id.
            </summary>
            <param name="form">The form.</param>
            <returns>The form's application id.</returns>
        </member>
        <member name="M:Windows7.DesktopIntegration.WindowsForms.WindowsFormsExtensions.EnableCustomWindowPreview(System.Windows.Forms.Form)">
            <summary>
            Enables custom window preview on this form, meaning that
            the DWM will send messages when a live thumbnail preview
            or a live peek will be necessary.
            </summary>
            <param name="form">The form.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.WindowsForms.WindowsFormsExtensions.DisableCustomWindowPreview(System.Windows.Forms.Form)">
            <summary>
            Disables custom window preview on this form, meaning that
            the DWM will not send messages when a live thumbnail preview
            or a live peek will be necessary, but instead rely on its
            default rendering.
            </summary>
            <param name="form">The form.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.WindowsForms.WindowsFormsExtensions.SetIconicThumbnail(System.Windows.Forms.Form,System.Drawing.Bitmap)">
            <summary>
            Sets this form's iconic thumbnail to the specified bitmap.
            </summary>
            <param name="form">The form.</param>
            <param name="bitmap">The bitmap.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.WindowsForms.WindowsFormsExtensions.SetPeekBitmap(System.Windows.Forms.Form,System.Drawing.Bitmap,System.Boolean)">
            <summary>
            Sets this form's peek (live preview) bitmap.
            </summary>
            <param name="form">The form.</param>
            <param name="bitmap">The bitmap.</param>
            <param name="displayFrame">Whether to display a standard window
            frame around the bitmap.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.WindowsForms.WindowsFormsExtensions.SetTaskbarOverlayIcon(System.Windows.Forms.Form,System.Drawing.Icon,System.String)">
            <summary>
            Draws the specified overlay icon over this form's taskbar button.
            </summary>
            <param name="form">The form.</param>
            <param name="icon">The overlay icon.</param>
            <param name="description">The overlay icon's description.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.WindowsForms.WindowsFormsExtensions.SetTaskbarProgress(System.Windows.Forms.ProgressBar)">
            <summary>
            Sets the progress bar in the containing form's taskbar button
            to this progress bar's progress.
            </summary>
            <param name="progressBar">The progress bar.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.WindowsForms.WindowsFormsExtensions.SetTaskbarProgress(System.Windows.Forms.ToolStripProgressBar)">
            <summary>
            Sets the progress bar in the containing form's taskbar button
            to this toolstrip progress bar's progress.
            </summary>
            <param name="progressBar">The progress bar.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.WindowsForms.WindowsFormsExtensions.SetTaskbarProgress(System.Windows.Forms.Form,System.Single)">
            <summary>
            Sets the progress bar of this form's taskbar button to the
            specified percentage.
            </summary>
            <param name="form">The form.</param>
            <param name="percent">The progress percentage.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.WindowsForms.WindowsFormsExtensions.SetTaskbarProgressState(System.Windows.Forms.Form,Windows7.DesktopIntegration.Windows7Taskbar.ThumbnailProgressState)">
            <summary>
            Sets the progress bar of this form's taskbar button to the
            specified state.
            </summary>
            <param name="form">The form.</param>
            <param name="state">The taskbar progress state.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.WindowsForms.WindowsFormsExtensions.CreateProgressEnabledBackgroundWorker(System.Windows.Forms.Form)">
            <summary>
            Creates a background worker that dispatches progress notifications
            to the application's taskbar button.
            </summary>
            <param name="form">The form.</param>
            <returns>An instance of <see cref="T:System.ComponentModel.BackgroundWorker"/> that reports
            progress through the application's taskbar button.</returns>
        </member>
        <member name="M:Windows7.DesktopIntegration.WindowsForms.WindowsFormsExtensions.CreateThumbButtonManager(System.Windows.Forms.Form)">
            <summary>
            Creates a taskbar thumbnail button manager for this form.
            </summary>
            <param name="form">The form.</param>
            <returns>An object of type <see cref="T:Windows7.DesktopIntegration.ThumbButtonManager"/>
            that can be used to add and manage thumbnail toolbar buttons.</returns>
        </member>
        <member name="M:Windows7.DesktopIntegration.WindowsForms.WindowsFormsExtensions.CreateJumpListManager(System.Windows.Forms.Form)">
            <summary>
            Creates a jump list manager for this form.
            </summary>
            <param name="form">The form.</param>
            <returns>An object of type <see cref="T:Windows7.DesktopIntegration.JumpListManager"/>
            that can be used to manage the application's jump list.</returns>
        </member>
        <member name="M:Windows7.DesktopIntegration.WindowsForms.WindowsFormsExtensions.SetThumbnailClip(System.Windows.Forms.Form,System.Drawing.Rectangle)">
            <summary>
            Specifies that only a portion of the form's client area
            should be used in the form's thumbnail.
            </summary>
            <param name="form">The form.</param>
            <param name="clipRect">The rectangle that specifies the clipped region.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.WindowsForms.WindowsFormsExtensions.SetThumbnailTooltip(System.Windows.Forms.Form,System.String)">
            <summary>
            Sets the specified form's thumbnail tooltip.
            </summary>
            <param name="form">The form.</param>
            <param name="tooltip">The tooltip text.</param>
        </member>
        <member name="T:Windows7.DesktopIntegration.ThumbButton">
            <summary>
            Represents a taskbar thumbnail button in the thumbnail toolbar.
            </summary>
        </member>
        <member name="E:Windows7.DesktopIntegration.ThumbButton.Clicked">
            <summary>
            The event that occurs when the taskbar thumbnail button
            is clicked.
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.ThumbButton.Id">
            <summary>
            Gets or sets thumbnail button's id.
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.ThumbButton.Icon">
            <summary>
            Gets or sets the thumbnail button's icon.
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.ThumbButton.Tooltip">
            <summary>
            Gets or sets the thumbnail button's tooltip.
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.ThumbButton.Visible">
            <summary>
            Gets or sets the thumbnail button's visibility.
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.ThumbButton.Enabled">
            <summary>
            Gets or sets the thumbnail button's enabled state.
            </summary>
        </member>
        <member name="T:Windows7.DesktopIntegration.JumpListManager">
            <summary>
            Provides services to manage taskbar jump lists, including
            custom destinations and custom tasks.
            </summary>
            <remarks>
            This class mostly borrows the Windows Shell's concepts where
            jump lists are concerned including:
            <b>Application destinations</b> - Destinations added to the application's
            recent and frequent categories by the shell or by the application.
            <b>Custom destinations</b> - Destinations added to the application's
            jump list in other categories by the application.
            <b>Tasks</b> - Tasks added to the application's jump list.
            <b>The methods of this class are not thread-safe.</b>
            </remarks>
        </member>
        <member name="M:Windows7.DesktopIntegration.JumpListManager.#ctor(System.String)">
            <summary>
            Initializes a new instance of the jump list manager
            with the specified application id.
            </summary>
            <param name="appId">The application id.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.JumpListManager.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the jump list manager
            with the specified window handle.
            </summary>
            <param name="hwnd">The window handle.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.JumpListManager.AddUserTask(Windows7.DesktopIntegration.IJumpListTask)">
            <summary>
            Adds a task to the application's jump list.
            </summary>
            <param name="task">An object implementing <see cref="T:Windows7.DesktopIntegration.IJumpListTask"/>,
            such as <see cref="T:Windows7.DesktopIntegration.ShellLink"/>.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.JumpListManager.DeleteTask(Windows7.DesktopIntegration.IJumpListTask)">
            <summary>
            Deletes the specified task from the application's jump list.
            </summary>
            <param name="task">The task to delete.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.JumpListManager.ClearTasks">
            <summary>
            Deletes all the tasks from the application's jump list.
            </summary>
        </member>
        <member name="M:Windows7.DesktopIntegration.JumpListManager.AddCustomDestination(Windows7.DesktopIntegration.IJumpListDestination)">
            <summary>
            Adds a custom destination to the application's jump list.
            </summary>
            <param name="destination">An object implementing
            <see cref="T:Windows7.DesktopIntegration.IJumpListDestination"/> such as <see cref="T:Windows7.DesktopIntegration.ShellLink"/>
            or <see cref="T:Windows7.DesktopIntegration.ShellItem"/>.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.JumpListManager.GetCustomDestinationsByCategory(System.String)">
            <summary>
            Retrieves the custom destinations belonging to the specified
            category from this application's jump list.  If destinations are
            modified through the use of this property, the
            <see cref="M:Windows7.DesktopIntegration.JumpListManager.Refresh"/> method must be called to repopulate the
            application's jump list.
            </summary>
            <param name="category">The category.</param>
            <returns>A collection of destinations of type <see cref="T:Windows7.DesktopIntegration.IJumpListDestination"/>.</returns>
        </member>
        <member name="M:Windows7.DesktopIntegration.JumpListManager.DeleteCustomDestination(Windows7.DesktopIntegration.IJumpListDestination)">
            <summary>
            Deletes the specified custom destination from the application's
            jump list.
            </summary>
            <param name="destination">The destination to delete.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.JumpListManager.AddToRecent(System.String)">
            <summary>
            Adds the specified destination to the application's
            recent destinations list.
            </summary>
            <remarks>
            If the recent and frequent categories are disabled,
            this method has no visual effect on the jump list
            in the recent and frequent categories respectively.
            </remarks>
            <param name="destination">The path to the destination.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.JumpListManager.AddToRecent(Windows7.DesktopIntegration.IJumpListDestination)">
            <summary>
            Adds the specified destination to the application's
            recent destinations list.
            </summary>
            <remarks>
            If the recent and frequent categories are disabled,
            this method has no visual effect on the jump list
            in the recent and frequent categories respectively.
            </remarks>
            <param name="destination">An object implementing
            <see cref="T:Windows7.DesktopIntegration.IJumpListDestination"/> such as <see cref="T:Windows7.DesktopIntegration.ShellLink"/>
            or <see cref="T:Windows7.DesktopIntegration.ShellItem"/>.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.JumpListManager.ClearAllDestinations">
            <summary>
            Removes all destinations from the application's jump list.
            </summary>
        </member>
        <member name="M:Windows7.DesktopIntegration.JumpListManager.ClearApplicationDestinations">
            <summary>
            Removes all application destinations (such as frequent and recent)
            from the application's jump list.
            </summary>
        </member>
        <member name="M:Windows7.DesktopIntegration.JumpListManager.GetApplicationDestinations(Windows7.DesktopIntegration.ApplicationDestinationType)">
            <summary>
            Retrieves all application destinations belonging to the specified
            application destination type.
            </summary>
            <param name="type">The application destination type.</param>
            <returns>A copy of the application destinations belonging to
            the specified type; modifying the returned objects has no effect
            on the application's destination list.</returns>
        </member>
        <member name="M:Windows7.DesktopIntegration.JumpListManager.DeleteApplicationDestination(Windows7.DesktopIntegration.IJumpListDestination)">
            <summary>
            Deletes the specified application destination from the application's
            jump list.
            </summary>
            <param name="destination">The application destination.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.JumpListManager.ClearCustomDestinations">
            <summary>
            Deletes all custom destinations from the application's jump list.
            </summary>
        </member>
        <member name="M:Windows7.DesktopIntegration.JumpListManager.Refresh">
            <summary>
            Repopulates the application's jump list.
            Use this method after all current changes to 
            the application's jump list have been introduced,
            and you want the list to be refreshed.
            </summary>
            <returns><b>true</b> if the list was refreshed; <b>false</b>
            if the operation was cancelled.  The operation might have
            been cancelled if the <see cref="E:Windows7.DesktopIntegration.JumpListManager.UserRemovedItems"/> event
            handler instructed us to cancel the operation.</returns>
            <remarks>
            If the user removed items from the jump list between the
            last refresh operation and this one, then the
            <see cref="E:Windows7.DesktopIntegration.JumpListManager.UserRemovedItems"/> event will be invoked.
            If the event handler for this event instructed us to cancel
            the operation, then the current transaction is aborted,
            no items are added, and this method returns <b>false</b>.
            Check the return value to determine whether the jump list
            needs to be changed and the operation attempted again.
            </remarks>
        </member>
        <member name="M:Windows7.DesktopIntegration.JumpListManager.Dispose">
            <summary>
            Cleans the resources associated with this jump list.
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.JumpListManager.Tasks">
            <summary>
            Retrieves the tasks currently present in the application's
            jump list.  If the tasks are modified through the use of this
            property, the <see cref="M:Windows7.DesktopIntegration.JumpListManager.Refresh"/> method must be called to
            repopulate the application's jump list.
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.JumpListManager.CustomDestinationCategories">
            <summary>
            Retrieves all custom destination categories in this application's
            jump list.
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.JumpListManager.EnabledAutoDestinationType">
            <summary>
            The currently enabled automatic application destination type.
            The supported values are the values of the
            <see cref="T:Windows7.DesktopIntegration.ApplicationDestinationType"/> enumeration.
            Only of the values can be set at any given time.
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.JumpListManager.MaximumSlotsInList">
            <summary>
            Returns the maximum number of items to be placed
            in the application's jump list.  This number depends
            on factors such as the display resolution or monitor
            change - do not assume it is always constant.
            </summary>
        </member>
        <member name="E:Windows7.DesktopIntegration.JumpListManager.UserRemovedItems">
            <summary>
            Register to this event to receive notifications when custom
            destinations are being removed from your jump list by the user.
            If you do not register to this event, you will not be able
            to refresh the list.  Additionally, if you attempt to add
            items to the list which have been previously removed by the user,
            the next refresh will fail to add your category.
            </summary>
        </member>
        <member name="T:Windows7.DesktopIntegration.ApplicationDestinationType">
            <summary>
            The application destination type.
            </summary>
        </member>
        <member name="F:Windows7.DesktopIntegration.ApplicationDestinationType.NONE">
            <summary>
            No application destination type is selected.
            </summary>
        </member>
        <member name="F:Windows7.DesktopIntegration.ApplicationDestinationType.Recent">
            <summary>
            Destinations used recently.
            </summary>
        </member>
        <member name="F:Windows7.DesktopIntegration.ApplicationDestinationType.Frequent">
            <summary>
            Destinations used frequently.
            </summary>
        </member>
        <member name="T:Windows7.DesktopIntegration.UserRemovedItemsEventArgs">
            <summary>
            The event arguments for the event that occurs
            when the user removes items from the application's
            jump list.
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.UserRemovedItemsEventArgs.RemovedItems">
            <summary>
            The collection of removed items.  Each item
            is the path.
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.UserRemovedItemsEventArgs.CancelCurrentOperation">
            <summary>
            Set to <b>true</b> if the current operation
            should be cancelled.  Should be used by the application
            if because of the items the user has removed
            there is no real work to do with the jump list.
            </summary>
        </member>
        <member name="T:Windows7.DesktopIntegration.BitmapRequestedEventArgs">
            <summary>
            The event arguments object for the thumbnail request
            and peek preview request events published by the
            <see cref="T:Windows7.DesktopIntegration.CustomWindowsManager"/> class.
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.BitmapRequestedEventArgs.Width">
            <summary>
            Gets the requested bitmap's width.
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.BitmapRequestedEventArgs.Height">
            <summary>
            Gets the requested bitmap's height.
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.BitmapRequestedEventArgs.UseWindowScreenshot">
            <summary>
            Sets a flag indicating whether to use the window screenshot
            instead of specifying a bitmap.  Note that using this feature
            is risky because not always a window screenshot can easily
            be snapped.  For example, minimized windows do not ever draw
            and therefore a bitmap of them can't be taken.
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.BitmapRequestedEventArgs.DoNotMirrorBitmap">
            <summary>
            Specifies whether the provided bitmap is already mirrored.
            DWM thumbnail and peek bitmaps must be mirrored vertically.
            If this flag is set to <b>false</b>, the <see cref="T:Windows7.DesktopIntegration.CustomWindowsManager"/>
            will mirror the bitmap automatically.
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.BitmapRequestedEventArgs.DisplayFrameAroundBitmap">
            <summary>
            Specifies whether a standard window frame will be displayed
            around the bitmap.  If the bitmap represents a top-level window,
            you would probably set this flag to <b>true</b>.  If the bitmap
            represents a child window (or a frameless window), you would
            probably set this flag to <b>false</b>.
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.BitmapRequestedEventArgs.Bitmap">
            <summary>
            Sets the bitmap requested by the sender.
            If the bitmap doesn't have the right dimensions,
            the DWM may scale it or not render certain areas
            as appropriate - it is the user's responsibility
            to render a bitmap with the proper dimensions.
            </summary>
        </member>
        <member name="T:Windows7.DesktopIntegration.CustomWindowsManager">
            <summary>
            Manages custom window representations in taskbar thumbnails
            and DWM peek preview (Aero Peek).
            </summary>
        </member>
        <member name="M:Windows7.DesktopIntegration.CustomWindowsManager.CreateWindowsManager(System.IntPtr)">
            <summary>
            Creates a new instance of this class from the specified
            window handle.
            </summary>
            <param name="hwnd">The window handle.</param>
            <returns>A new instance of this class wrapping the 
            specified window handle.</returns>
        </member>
        <member name="M:Windows7.DesktopIntegration.CustomWindowsManager.CreateWindowsManager(System.IntPtr,System.IntPtr)">
            <summary>
            Creates a new instance of this class from the specified
            window handle and parent window handle.
            </summary>
            <param name="hwnd">The window handle.</param>
            <param name="parentHwnd">The parent window handle.</param>
            <returns>A new instance of this class wrapping the
            specified window handle and parent window handle.</returns>
        </member>
        <member name="M:Windows7.DesktopIntegration.CustomWindowsManager.#ctor(System.IntPtr)">
            <summary>
            Creates a new instance of this class using the
            specified window handle and enables custom window
            preview on the window.
            </summary>
            <param name="hwnd">The window handle.</param>
        </member>
        <member name="M:Windows7.DesktopIntegration.CustomWindowsManager.InvalidatePreviews">
            <summary>
            Invalidates the previews (thumbnail bitmap and peek bitmap)
            that the DWM has currently cached.  If this method is not called,
            the DWM is free to use old versions of the bitmaps.
            </summary>
        </member>
        <member name="M:Windows7.DesktopIntegration.CustomWindowsManager.DisablePreview">
            <summary>
            Disables window preview features for this window.
            </summary>
        </member>
        <member name="M:Windows7.DesktopIntegration.CustomWindowsManager.EnablePreview">
            <summary>
            Enables window preview features for this window.
            Window preview feature are enabled by default, unless disabled
            by the use of the <see cref="M:Windows7.DesktopIntegration.CustomWindowsManager.DisablePreview"/> method.
            </summary>
        </member>
        <member name="M:Windows7.DesktopIntegration.CustomWindowsManager.WindowClosed">
            <summary>
            Notifies the custom window manager that the underlying
            window has been closed.  This method must be called when
            the window is closed, or residual buttons might remain
            in the taskbar and window handle leaks might occur.
            </summary>
        </member>
        <member name="M:Windows7.DesktopIntegration.CustomWindowsManager.DispatchMessage(System.Windows.Forms.Message@)">
            <summary>
            Dispatches a window message so that the appropriate events
            can be invoked.
            </summary>
            <param name="m">The window message, typically obtained
            from a Windows Forms or WPF window procedure.</param>
        </member>
        <member name="E:Windows7.DesktopIntegration.CustomWindowsManager.PeekRequested">
            <summary>
            The event that occurs when a peek bitmap must be provided
            for the window.
            </summary>
        </member>
        <member name="E:Windows7.DesktopIntegration.CustomWindowsManager.ThumbnailRequested">
            <summary>
            The event that occurs when a thumbnail must be provided
            for the window.
            </summary>
        </member>
        <member name="T:Windows7.DesktopIntegration.ScreenCapture">
            <summary>
            Contains utility methods associated with screen capturing.
            </summary>
        </member>
        <member name="M:Windows7.DesktopIntegration.ScreenCapture.GrabWindowBitmap(System.IntPtr,System.Drawing.Size)">
            <summary>
            Captures a screenshot of the specified window at the specified
            bitmap size.
            </summary>
            <param name="hwnd">The window handle.</param>
            <param name="bitmapSize">The requested bitmap size.</param>
            <returns>A screen capture of the window.</returns>
        </member>
        <member name="T:Windows7.DesktopIntegration.Properties.Resources">
            <summary>
              Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.Properties.Resources.ResourceManager">
            <summary>
              Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
            </summary>
        </member>
        <member name="P:Windows7.DesktopIntegration.Properties.Resources.Culture">
            <summary>
              Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
              Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
            </summary>
        </member>
    </members>
</doc>
